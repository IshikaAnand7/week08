name: Frontend Pipeline - CI/CD

on:
  push:
    branches: [ main, develop, 'feature/**' ]
    paths:
      - 'week08/frontend/**'
      - '.github/workflows/frontend-pipeline.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'week08/frontend/**'

env:
  NODE_VERSION: '18'
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}
  FRONTEND_DIR: week08/frontend
  ACR_LOGIN_SERVER: ${{ secrets.AZURE_CONTAINER_REGISTRY }}

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.FRONTEND_DIR }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Show files in frontend
        run: ls -al

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: ${{ env.FRONTEND_DIR }}/package-lock.json

      - name: Install dependencies
        run: npm ci || npm install

      - name: Run lint (if available)
        run: |
          if npm run lint --dry-run >/dev/null 2>&1; then
            npm run lint
          fi

      - name: Run tests (if available)
        run: |
          if npm run test --dry-run >/dev/null 2>&1; then
            npm run test
          fi

  build-frontend:
    needs: test-frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to ACR
        run: |
          echo ${{ secrets.ACR_PASSWORD }} | docker login ${{ env.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Build and Push Docker Image
        run: |
          TAG=$([[ "${{ github.ref }}" == "refs/heads/main" ]] && echo "prod-${{ env.IMAGE_TAG }}" || echo "staging-${{ env.IMAGE_TAG }}")
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/frontend:$TAG ${{ env.FRONTEND_DIR }}
          docker push ${{ env.ACR_LOGIN_SERVER }}/frontend:$TAG

      - name: Logout from Azure
        run: az logout
        if: always()

  deploy-frontend:
    needs: build-frontend
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS Context
        run: |
          az aks get-credentials \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ secrets.CLUSTER_NAME }} \
            --overwrite-existing

      - name: Deploy Frontend to AKS
        run: |
          cd k8s/
          TAG=$([[ "${{ github.ref }}" == "refs/heads/main" ]] && echo "prod-${{ env.IMAGE_TAG }}" || echo "staging-${{ env.IMAGE_TAG }}")
          sed -i "s|latest|$TAG|g" frontend.yaml
          kubectl apply -f frontend.yaml

      - name: Logout from Azure
        run: az logout
        if: always()
